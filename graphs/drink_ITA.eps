%!PS-Adobe-2.0 EPSF-2.0
%%Title: drink_ITA.eps
%%Creator: gnuplot 4.6 patchlevel 3
%%CreationDate: Fri Feb 21 14:06:22 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -80 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (drink_ITA.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 3)
  /Author (on2valhalla)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Feb 21 14:06:22 2014)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 240 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
432 480 M
0 63 V
0 3776 R
0 -63 V
stroke
432 240 M
[ [(Times-Roman) 240.0 0.0 true true 0 (1800)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
2016 480 M
0 63 V
0 3776 R
0 -63 V
stroke
2016 240 M
[ [(Times-Roman) 240.0 0.0 true true 0 (1850)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
3600 480 M
0 63 V
0 3776 R
0 -63 V
stroke
3600 240 M
[ [(Times-Roman) 240.0 0.0 true true 0 (1900)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
5183 480 M
0 63 V
0 3776 R
0 -63 V
stroke
5183 240 M
[ [(Times-Roman) 240.0 0.0 true true 0 (1950)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
6767 480 M
0 63 V
0 3776 R
0 -63 V
stroke
6767 240 M
[ [(Times-Roman) 240.0 0.0 true true 0 (2000)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
432 4319 N
432 480 L
6335 0 V
0 3839 V
-6335 0 V
Z stroke
LCb setrgbcolor
192 2399 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Times-Roman) 240.0 0.0 true true 0 (Relative Frequency)]
] -80.0 MCshow
grestore
LTb
3599 4679 M
[ [(Times-Roman) 240.0 0.0 true true 0 (Query: )]
[(Times-Italic) 240.0 0.0 true true 0 ("bere=>*_NOUN")]
] -80.0 MCshow
2.000 UP
1.000 UL
LTb
LCb setrgbcolor
% Begin plot #1
10.000 UL
LT0
LC0 setrgbcolor
LCb setrgbcolor
1134 4136 M
[ [(Times-Italic) 240.0 0.0 true true 0 ("bere=>vino_NOUN")]
] -80.0 MLshow
LT0
720 4136 M
270 0 V
432 2229 M
127 166 V
685 2195 L
127 1 V
127 112 V
127 11 V
126 43 V
127 955 V
127 311 V
126 -173 V
127 521 V
1826 2187 L
126 -702 V
127 125 V
127 382 V
127 58 V
126 189 V
127 -7 V
127 -599 V
126 94 V
127 654 V
127 291 V
126 -581 V
127 135 V
127 25 V
127 57 V
126 442 V
127 -395 V
127 449 V
126 -59 V
127 18 V
127 -160 V
126 301 V
127 62 V
127 -889 V
127 -149 V
126 776 V
127 264 V
127 -442 V
126 204 V
127 -184 V
127 172 V
126 -118 V
127 -76 V
127 111 V
127 62 V
126 275 V
127 516 V
127 180 V
126 120 V
127 99 V
% End plot #1
% Begin plot #2
stroke
LT1
LC1 setrgbcolor
LCb setrgbcolor
1134 3896 M
[ [(Times-Italic) 240.0 0.0 true true 0 ("bere=>acqua_NOUN")]
] -80.0 MLshow
LT1
720 3896 M
270 0 V
432 2436 M
127 396 V
126 117 V
127 156 V
939 2552 L
127 523 V
126 1244 V
127 -273 V
127 -518 V
126 -51 V
127 -381 V
127 -4 V
126 -645 V
127 -567 V
127 252 V
127 39 V
126 -448 V
127 472 V
127 226 V
126 -389 V
127 239 V
127 462 V
126 292 V
127 -562 V
127 -198 V
127 -151 V
126 102 V
127 29 V
127 368 V
126 -348 V
127 -643 V
127 148 V
126 303 V
127 49 V
127 -266 V
127 -419 V
126 357 V
127 207 V
127 -53 V
126 64 V
127 -192 V
127 102 V
126 -174 V
127 -85 V
127 -65 V
127 -67 V
126 366 V
127 185 V
127 180 V
126 283 V
127 14 V
% End plot #2
% Begin plot #3
stroke
LT2
LC2 setrgbcolor
LCb setrgbcolor
1134 3656 M
[ [(Times-Italic) 240.0 0.0 true true 0 ("bere=>bicchiere_NOUN")]
] -80.0 MLshow
LT2
720 3656 M
270 0 V
432 731 M
127 14 V
685 602 L
127 829 V
127 0 V
1066 605 L
126 94 V
127 170 V
127 339 V
126 -90 V
1699 848 L
1826 613 L
126 201 V
127 82 V
2206 690 L
127 65 V
126 147 V
127 181 V
127 -38 V
126 147 V
127 300 V
127 -177 V
126 -66 V
127 262 V
127 124 V
127 -107 V
126 -204 V
127 40 V
127 -54 V
126 96 V
127 131 V
127 -23 V
126 287 V
127 -133 V
127 -203 V
127 -24 V
126 752 V
127 -248 V
127 -186 V
126 209 V
127 12 V
127 194 V
126 -81 V
127 -183 V
127 -7 V
127 92 V
126 -7 V
127 152 V
127 358 V
126 161 V
127 -147 V
% End plot #3
% Begin plot #4
stroke
LT3
LC3 setrgbcolor
LCb setrgbcolor
1134 3416 M
[ [(Times-Italic) 240.0 0.0 true true 0 ("bere=>sangue_NOUN")]
] -80.0 MLshow
LT3
720 3416 M
270 0 V
432 960 M
127 184 V
685 1009 L
127 182 V
127 876 V
127 522 V
126 -738 V
127 -644 V
127 -37 V
126 -124 V
127 190 V
127 -117 V
1952 954 L
127 601 V
127 18 V
127 -250 V
126 -112 V
127 -155 V
2713 751 L
126 49 V
127 246 V
127 69 V
126 89 V
3346 944 L
127 40 V
127 123 V
3726 959 L
127 -58 V
127 83 V
126 160 V
127 -87 V
127 76 V
126 27 V
4613 869 L
127 43 V
127 86 V
126 425 V
127 -180 V
5247 870 L
126 71 V
127 77 V
127 28 V
5753 937 L
127 -30 V
127 73 V
127 0 V
126 98 V
127 31 V
127 102 V
126 180 V
127 135 V
% End plot #4
% Begin plot #5
stroke
LT4
LC4 setrgbcolor
LCb setrgbcolor
1134 3176 M
[ [(Times-Italic) 240.0 0.0 true true 0 ("bere=>caffè_NOUN")]
] -80.0 MLshow
LT4
720 3176 M
270 0 V
432 731 M
559 624 L
685 480 L
127 608 V
127 152 V
1066 849 L
1192 700 L
127 11 V
127 -14 V
126 110 V
127 170 V
1826 819 L
126 -44 V
127 15 V
127 -14 V
127 87 V
2459 692 L
127 -29 V
127 233 V
2839 735 L
127 -39 V
127 243 V
3219 800 L
3346 677 L
127 55 V
127 133 V
126 118 V
3853 866 L
127 -58 V
126 57 V
127 142 V
4360 853 L
126 43 V
127 -2 V
127 36 V
127 48 V
126 -38 V
127 54 V
127 -6 V
126 94 V
127 355 V
127 222 V
126 -94 V
127 -20 V
127 75 V
127 62 V
126 40 V
127 356 V
127 707 V
126 191 V
127 -73 V
% End plot #5
% Begin plot #6
stroke
LT5
LC5 setrgbcolor
LCb setrgbcolor
1134 2936 M
[ [(Times-Italic) 240.0 0.0 true true 0 ("bere=>calice_NOUN")]
] -80.0 MLshow
LT5
720 2936 M
270 0 V
432 480 M
559 591 L
126 0 V
127 60 V
939 803 L
127 99 V
126 -7 V
127 190 V
1446 809 L
126 137 V
127 291 V
127 -142 V
126 97 V
127 318 V
127 -110 V
127 -215 V
126 -31 V
127 -10 V
127 63 V
2839 891 L
127 -73 V
127 99 V
126 -92 V
127 -98 V
127 -66 V
127 38 V
126 171 V
127 -22 V
3980 638 L
126 57 V
127 245 V
127 153 V
4486 946 L
127 -1 V
127 -19 V
127 -31 V
126 97 V
127 -76 V
127 -71 V
126 -14 V
127 -54 V
127 186 V
126 56 V
5880 887 L
6007 784 L
127 37 V
126 17 V
127 76 V
127 268 V
126 54 V
127 -22 V
% End plot #6
% Begin plot #7
stroke
LT6
LC6 setrgbcolor
LCb setrgbcolor
1134 2696 M
[ [(Times-Italic) 240.0 0.0 true true 0 ("bere=>acque_NOUN")]
] -80.0 MLshow
LT6
720 2696 M
270 0 V
432 1896 M
559 1655 L
685 1060 L
127 299 V
127 -63 V
127 -269 V
126 302 V
127 304 V
127 -433 V
126 -18 V
127 674 V
127 -710 V
1952 873 L
127 109 V
2206 858 L
2333 728 L
126 92 V
127 155 V
127 77 V
126 -67 V
127 44 V
3093 921 L
126 24 V
3346 799 L
127 50 V
127 86 V
126 -9 V
127 250 V
127 -95 V
4106 723 L
127 45 V
127 -27 V
126 118 V
127 2 V
4740 759 L
127 145 V
4993 781 L
127 -26 V
127 4 V
126 -92 V
127 -77 V
127 -3 V
126 -2 V
127 28 V
127 -13 V
127 -26 V
126 59 V
127 3 V
127 24 V
126 10 V
127 -47 V
% End plot #7
% Begin plot #8
stroke
LT7
LC7 setrgbcolor
LCb setrgbcolor
1134 2456 M
[ [(Times-Italic) 240.0 0.0 true true 0 ("bere=>latte_NOUN")]
] -80.0 MLshow
LT7
720 2456 M
270 0 V
432 480 M
127 708 V
126 547 V
812 1418 L
939 1055 L
1066 698 L
126 155 V
127 753 V
1446 966 L
1572 806 L
127 70 V
1826 767 L
1952 621 L
127 57 V
127 -23 V
127 -72 V
126 -82 V
127 29 V
127 179 V
126 16 V
127 69 V
127 0 V
126 -70 V
127 83 V
127 107 V
127 23 V
126 -95 V
127 -17 V
127 74 V
126 -84 V
127 -19 V
127 55 V
126 59 V
127 101 V
127 63 V
4867 895 L
126 -29 V
127 38 V
127 65 V
5373 824 L
127 -9 V
127 94 V
126 10 V
127 -99 V
127 41 V
127 51 V
126 61 V
127 7 V
127 78 V
126 118 V
127 11 V
% End plot #8
% Begin plot #9
stroke
LT8
LC8 setrgbcolor
LCb setrgbcolor
1134 2216 M
[ [(Times-Italic) 240.0 0.0 true true 0 ("bere=>birra_NOUN")]
] -80.0 MLshow
LT8
720 2216 M
270 0 V
432 640 M
559 793 L
685 970 L
812 748 L
939 480 L
127 0 V
126 53 V
127 104 V
127 105 V
126 138 V
1699 621 L
127 -2 V
126 19 V
127 -25 V
127 -71 V
127 -45 V
126 150 V
127 246 V
2713 793 L
126 -4 V
127 -25 V
127 -20 V
126 41 V
127 -78 V
127 -32 V
127 23 V
126 6 V
127 24 V
127 196 V
126 -45 V
4233 736 L
127 30 V
126 51 V
127 44 V
127 -9 V
4867 731 L
126 177 V
127 16 V
127 -60 V
126 160 V
127 -41 V
127 46 V
126 13 V
127 36 V
127 140 V
127 185 V
126 109 V
127 -125 V
127 334 V
126 219 V
127 150 V
% End plot #9
% Begin plot #10
stroke
LT0
LC0 setrgbcolor
LCb setrgbcolor
1134 1976 M
[ [(Times-Italic) 240.0 0.0 true true 0 ("bere=>cicuta_NOUN")]
] -80.0 MLshow
LT0
720 1976 M
270 0 V
432 480 M
559 844 L
685 480 L
812 845 L
127 0 V
1066 705 L
126 167 V
127 367 V
1446 972 L
126 -26 V
127 -52 V
127 59 V
126 -97 V
2079 628 L
127 0 V
127 20 V
126 98 V
127 128 V
127 -7 V
126 13 V
127 215 V
3093 945 L
3219 814 L
3346 609 L
127 43 V
127 131 V
126 58 V
127 -81 V
127 404 V
126 266 V
127 -276 V
127 15 V
4486 922 L
4613 748 L
127 41 V
127 79 V
126 19 V
127 -74 V
127 37 V
126 -99 V
127 49 V
127 64 V
126 -51 V
127 -29 V
127 -77 V
127 40 V
126 9 V
127 -11 V
127 53 V
126 -12 V
127 -11 V
% End plot #10
stroke
1.000 UL
LTb
LCb setrgbcolor
432 4319 N
432 480 L
6335 0 V
0 3839 V
-6335 0 V
Z stroke
2.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Italic Times-Roman
